name: Build Custom ISO

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Build Environment
      run: |
        sudo apt update
        sudo apt install -y debootstrap mkisofs xorriso grub-pc-bin

    - name: Bootstrap the Base System
      run: |
        mkdir -p $HOME/custom-distro/rootfs
        sudo debootstrap --variant=buildd --arch=amd64 focal $HOME/custom-distro/rootfs http://archive.ubuntu.com/ubuntu/

    - name: Chroot and Customize System
      run: |
        sudo mount --bind /proc $HOME/custom-distro/rootfs/proc
        sudo mount --bind /sys $HOME/custom-distro/rootfs/sys
        sudo mount --bind /dev $HOME/custom-distro/rootfs/dev
        sudo mount --bind /dev/pts $HOME/custom-distro/rootfs/dev/pts
        sudo chroot $HOME/custom-distro/rootfs /bin/bash <<EOF
        # Add necessary repositories
        echo "deb http://archive.ubuntu.com/ubuntu focal main universe" > /etc/apt/sources.list
        apt update
        apt install -y openbox xterm grub-pc-bin
        EOF

    - name: Unmount Filesystems
      run: |
        sudo umount $HOME/custom-distro/rootfs/proc
        sudo umount $HOME/custom-distro/rootfs/sys
        sudo umount $HOME/custom-distro/rootfs/dev/pts
        sudo umount $HOME/custom-distro/rootfs/dev

    - name: Prepare ISO Image
      run: |
        # Create directories for ISO
        mkdir -p $HOME/custom-distro/image/{casper,isolinux,install}

        # Copy kernel files
        sudo cp $HOME/custom-distro/rootfs/boot/vmlinuz-* $HOME/custom-distro/image/casper/vmlinuz
        sudo cp $HOME/custom-distro/rootfs/boot/initrd.img-* $HOME/custom-distro/image/casper/initrd

        # GRUB configuration
        cat <<EOF > $HOME/custom-distro/image/isolinux/grub.cfg
search --set=root --file /ubuntu

insmod all_video

set default="0"
set timeout=30

menuentry "Live System" {
   linux /casper/vmlinuz boot=casper nopersistent toram quiet splash ---
   initrd /casper/initrd
}

menuentry "Install System" {
   linux /casper/vmlinuz boot=casper only-ubiquity quiet splash ---
   initrd /casper/initrd
}
EOF

        # Generate ISO image
        pushd $HOME/custom-distro/image
        grub-mkstandalone \
            --format=x86_64-efi \
            --output=isolinux/bootx64.efi \
            --locales="" \
            --fonts="" \
            "boot/grub/grub.cfg=isolinux/grub.cfg"

        grub-mkstandalone \
            --format=i386-pc \
            --output=isolinux/core.img \
            --install-modules="linux16 linux normal iso9660 biosdisk memdisk search tar ls" \
            --modules="linux16 linux normal iso9660 biosdisk search" \
            --locales="" \
            --fonts="" \
            "boot/grub/grub.cfg=isolinux/grub.cfg"

        cat /usr/lib/grub/i386-pc/cdboot.img isolinux/core.img > isolinux/bios.img

        sudo xorriso \
            -as mkisofs \
            -iso-level 3 \
            -full-iso9660-filenames \
            -volid "CustomDistro" \
            -eltorito-boot isolinux/bios.img \
            -no-emul-boot \
            -boot-load-size 4 \
            -boot-info-table \
            --eltorito-catalog isolinux/boot.cat \
            --grub2-boot-info \
            --grub2-mbr /usr/lib/grub/i386-pc/boot_hybrid.img \
            -output "$HOME/custom-distro/custom-distro.iso" \
            -m "isolinux/efiboot.img" \
            -m "isolinux/bios.img" \
            -graft-points \
               "/EFI/efiboot.img=isolinux/efiboot.img" \
               "/boot/grub/bios.img=isolinux/bios.img" \
               "."

        popd

    - name: Upload ISO as artifact
      uses: actions/upload-artifact@v3
      with:
        name: custom-distro-iso
        path: $HOME/custom-distro/custom-distro.iso
